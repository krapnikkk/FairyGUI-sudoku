{
  "code": "import toolkit from \"./toolkit\";\r\nexport default class Generator {\r\n    constructor() {\r\n        this.martrix = [];\r\n        this._orders = [];\r\n    }\r\n    generate() {\r\n        while (!this.internalGenerate()) {\r\n            console.log(\"generate again!\");\r\n        }\r\n    }\r\n    internalGenerate() {\r\n        this.martrix = toolkit.makeMatrix();\r\n        this._orders = toolkit.makeMatrix()\r\n            .map(row => row.map((v, i) => i))\r\n            .map(row => toolkit.shuffle(row));\r\n        for (let index = 1; index <= 9; index++) {\r\n            if (!this.fillNumber(index)) {\r\n                return false;\r\n            }\r\n        }\r\n        ;\r\n        return true;\r\n    }\r\n    fillNumber(n) {\r\n        return this.fillRow(n, 0);\r\n    }\r\n    fillRow(n, rowIndex) {\r\n        if (rowIndex > 8) {\r\n            return true;\r\n        }\r\n        const row = this.martrix[rowIndex];\r\n        const orders = this._orders[rowIndex];\r\n        for (let i = 0; i < 9; i++) {\r\n            const colIndex = orders[i];\r\n            if (row[colIndex]) {\r\n                continue;\r\n            }\r\n            if (!toolkit.checkFillable(this.martrix, n, rowIndex, colIndex)) {\r\n                continue;\r\n            }\r\n            row[colIndex] = n;\r\n            if (!this.fillRow(n, rowIndex + 1)) {\r\n                row[colIndex] = 0;\r\n                continue;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n",
  "references": [
    "D:/workspace/coding/layabox/sudoku/src/core/toolkit.ts"
  ]
}

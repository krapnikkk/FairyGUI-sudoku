{
  "code": "import toolkit from \"./toolkit\";\r\nexport default class checker {\r\n    constructor(matrix) {\r\n        this._isSuccess = false;\r\n        this._matrix = [];\r\n        this._matrixMarks = [];\r\n        this._matrix = matrix;\r\n        this._matrixMarks = toolkit.makeMatrix(true);\r\n    }\r\n    get martixMarks() {\r\n        return this._matrixMarks;\r\n    }\r\n    get isSuccess() {\r\n        return this._isSuccess;\r\n    }\r\n    check() {\r\n        this.checkRows();\r\n        this.checkCols();\r\n        this.checkBoxes();\r\n        this._isSuccess = this._matrixMarks.every(row => row.every(mark => mark));\r\n        return this._isSuccess;\r\n    }\r\n    checkRows() {\r\n        for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\r\n            const row = this._matrix[rowIndex];\r\n            const marks = checker.checkArray(row);\r\n            for (let colIndex = 0; colIndex < marks.length; colIndex++) {\r\n                if (!marks[colIndex]) {\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    checkCols() {\r\n        for (let colIndex = 0; colIndex < 9; colIndex++) {\r\n            const cols = [];\r\n            for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\r\n                cols[rowIndex] = this._matrix[rowIndex][colIndex];\r\n            }\r\n            const marks = checker.checkArray(cols);\r\n            for (let rowIndex = 0; rowIndex < marks.length; rowIndex++) {\r\n                if (!marks[rowIndex]) {\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    checkBoxes() {\r\n        for (let boxIndex = 0; boxIndex < 9; boxIndex++) {\r\n            const boxes = toolkit.getBoxCells(this._matrix, boxIndex);\r\n            const marks = checker.checkArray(boxes);\r\n            for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\r\n                if (!marks[cellIndex]) {\r\n                    const { rowIndex, colIndex } = toolkit.convertFromBoxIndex(boxIndex, cellIndex);\r\n                    this._matrixMarks[rowIndex][colIndex] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static checkArray(array) {\r\n        const length = array.length;\r\n        const marks = new Array(length).fill(true);\r\n        array.forEach((v, i) => {\r\n            if (!v) {\r\n                marks[i] = false;\r\n                return;\r\n            }\r\n            if (marks[i]) {\r\n                for (let j = i + 1; j < 9; j++) {\r\n                    if (v === array[j]) {\r\n                        marks[i] = marks[j] = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return marks;\r\n    }\r\n}\r\n",
  "references": [
    "D:/workspace/coding/layabox/sudoku/src/core/toolkit.ts"
  ]
}
